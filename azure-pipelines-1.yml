# Deploy to Azure Kubernetes Service

# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '30ed517e-81e3-47c1-9447-29beb47675d5'
  imageRepository: 'alexandermillrpipelinesjavascriptdocker'
  containerRegistry: 'iamalexcontainerregistry.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'iamalexcontainerregistry676314d6-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Test
  displayName: Test stage
  jobs:  
  - job: Test
    displayName: Test
    pool: server
    steps:
    - task: InvokeRESTAPI@1
      inputs:
        connectionType: 'connectedServiceNameARM'
        azureServiceConnection: 'Architecture R&D(cd18b0ae-ea5b-4081-ba73-211bcfba49ba)'
        method: 'GET'
        headers: |
          {
          "Content-Type":"application/json; charset=utf-8", 
          "PlanUrl": "$(system.CollectionUri)", 
          "ProjectId": "$(system.TeamProjectId)", 
          "HubName": "$(system.HostType)", 
          "PlanId": "$(system.PlanId)", 
          "JobId": "$(system.JobId)", 
          "TimelineId": "$(system.TimelineId)", 
          "TaskInstanceId": "$(system.TaskInstanceId)", 
          "AuthToken": "$(system.AccessToken)",
          "appId": "5f38460a-550b-4596-9712-f546b2487589",
          "displayName": "amillersectest",
          "name": "http://amillersectest",
          "password": "1afa32f4-2365-43e9-b3c9-c1e0af5cc267",
          "tenant": "3289e021-493f-463c-bfc1-feb3ba494685"
          }
        urlSuffix: 'https://management.azure.com/subscriptions/cd18b0ae-ea5b-4081-ba73-211bcfba49ba/resourceGroups/Security-Group/providers/Microsoft.ContainerRegistry/registries/IAMAlexContainerRegistry/providers/Microsoft.Security/assessments/dbd0cb49-b563-45e7-9724-889e799fa648/subassessments/dea0de08-ab38-be41-8784-e44ff1ac5255?api-version=2019-01-01-preview'
        waitForCompletion: 'false'
        successCriteria: 'eq(root[''status''], ''Healthy'')'
